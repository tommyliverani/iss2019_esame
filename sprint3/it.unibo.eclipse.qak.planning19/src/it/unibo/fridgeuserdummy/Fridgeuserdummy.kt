/* Generated by AN DISI Unibo */ 
package it.unibo.fridgeuserdummy

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Fridgeuserdummy ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("fridgeUserDummy, invio prepare al frigo tra 10 secondi")
						delay(10000) 
						forward("prepare", "prepare()" ,"fridge" ) 
						println("fridgeUserDummy, invio add al frigo tra 10 secondi")
						delay(10000) 
						forward("add", "add(d)" ,"fridge" ) 
						println("fridgeUserDummy, invio showFridgeState al frigo tra 10 secondi")
						delay(10000) 
						forward("showFridgeState", "showFridgeState()" ,"fridge" ) 
					}
				}	 
			}
		}
}
