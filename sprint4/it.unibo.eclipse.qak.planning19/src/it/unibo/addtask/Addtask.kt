/* Generated by AN DISI Unibo */ 
package it.unibo.addtask

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Addtask ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						println("&&&  butlermind addtask")
					}
					 transition(edgeName="t018",targetState="doAdd",cond=whenDispatch("add"))
				}	 
				state("doAdd") { //this:State
					action { //it:State
						println("&&&  butlermind ADDING")
					}
					 transition( edgeName="goto",targetState="manageFridge", cond=doswitch() )
				}	 
				state("manageFridge") { //this:State
					action { //it:State
						forward("startTask", "startTask(fridge)" ,"butlertask" ) 
					}
					 transition(edgeName="t019",targetState="addDone",cond=whenDispatch("taskDone"))
				}	 
				state("addDone") { //this:State
					action { //it:State
						println("&&&  butlermind addDone")
					}
				}	 
			}
		}
}
